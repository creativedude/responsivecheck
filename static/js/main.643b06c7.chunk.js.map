{"version":3,"sources":["components/cells/Iframe/Iframe.tsx","components/layout/IframesContainer/IframesContainer.tsx","components/molecules/AddBlock/AddBlock.tsx","components/templates/ReactiveContainer/ReactiveContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Modal","setAppElement","Iframe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","modalRef","iframeRef","iframeBlock","setiframeBlockRef","state","link","Iwidth","Iheight","id","zoomlevel","name","gridsize","removeBlock","modalzoomlevel","React","styles","bind","assertThisInitialized","removeFn","openModal","afterOpenModal","closeModal","increaseFn","decreaseFn","setzoom","element","initzoomlevel","offsetWidth","style","height","classes","className","setState","prevState","modalIsOpen","modalzoom","current","size","zoom","react","ref","onClick","title","src","lib_default","a","isOpen","onAfterOpen","onRequestClose","contentLabel","modalStyles","IframesContainer","Iframes","_this2","map","item","i","Iframe_Iframe","key","parseInt","width","Task","addBlock","changeLink","handleWidthChange","handleHeightChange","handleNameChange","handleAdd","handleLinkChange","handleLinkInputChange","event","target","value","type","placeholder","onChange","ReactiveContainer","handleLink","w","h","n","newBlock","concat","toConsumableArray","blockNr","slice","AddBlock_Task","IframesContainer_IframesContainer","App","ReactiveContainer_ReactiveContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.643b06c7.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Modal from 'react-modal';\nModal.setAppElement('#root')\n\nexport default class Iframe extends React.Component<any, any> {\n    private myRef: any;\n    private modalRef: any;\n    private iframeRef: any;\n    private iframeBlock: any;\n    private setiframeBlockRef: any;\n    constructor(props : any) {\n        super(props);\n        this.state = {\n        \tlink: this.props.link,\n            Iwidth: this.props.Iwidth,\n            Iheight: this.props.Iheight,\n            id: this.props.id,\n            zoomlevel: 1,\n            name: this.props.name,\n            gridsize :  this.props.Iwidth <= this.props.Iheight ? 1 : 2,\n            removeBlock : this.props.removeBlock,\n            modalzoomlevel: 1,\n        };\n        this.myRef = React.createRef();\n        this.iframeBlock = null;\n        this.styles = this.styles.bind(this);\n        this.removeFn = this.removeFn.bind(this);\n        this.modalRef = React.createRef();\n        this.openModal = this.openModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.increaseFn = this.increaseFn.bind(this);\n        this.decreaseFn = this.decreaseFn.bind(this);\n        this.setzoom = this.setzoom.bind(this);\n        this.setiframeBlockRef = (element: any) => {\n            this.iframeBlock = element;\n        };\n    }\n    styles() {\n        const initzoomlevel = this.iframeBlock ? (this.iframeBlock.offsetWidth - 30) / this.state.Iwidth : 1;\n        const width = this.iframeBlock ? this.iframeBlock.offsetWidth : \"fail\";\n        const zoomlevel = initzoomlevel <=1 ? initzoomlevel : 1;\n        if (this.iframeBlock) {\n            this.iframeBlock.style.height = ((this.props.Iheight * zoomlevel) + 75) + \"px\";\n        }\n        const style =  \".iframe\" + this.props.id +\" {width: \" + this.props.Iwidth + \"px; height: \" + this.props.Iheight + \"px; border: 0; -ms-transform: scale(\"+zoomlevel+\"); -moz-transform: scale(\"+zoomlevel+\"); -o-transform: scale(\"+zoomlevel+\"); -webkit-transform: scale(\"+zoomlevel+\"); transform: scale(\"+zoomlevel+\"); -ms-transform-origin: 0 0; -moz-transform-origin: 0 0; -o-transform-origin: 0 0; -webkit-transform-origin: 0 0; transform-origin: 0 0;}\";\n        return style;\n    }\n    modalStyles() {\n        const modalzoomlevel = this.state.modalzoomlevel;\n        const style =  \".modaliframe {width: \" + this.props.Iwidth + \"px; height: \" + this.props.Iheight + \"px; border: 0; -ms-transform: scale(\"+modalzoomlevel+\"); -moz-transform: scale(\"+modalzoomlevel+\"); -o-transform: scale(\"+modalzoomlevel+\"); -webkit-transform: scale(\"+modalzoomlevel+\"); transform: scale(\"+modalzoomlevel+\"); -ms-transform-origin: 0 0; -moz-transform-origin: 0 0; -o-transform-origin: 0 0; -webkit-transform-origin: 0 0; transform-origin: 0 0;}\";\n        return style;\n    }\n    removeFn() {\n        this.state.removeBlock(this.state.id);\n    }\n    increaseFn() {\n        let classes = \"\";\n        switch (this.state.gridsize) {\n            case 0:\n                classes=\"IframeWrapper\";\n                break;\n            case 1: \n                classes=\"IframeWrapper doublewrapper\";\n                break;\n            case 2: \n                classes=\"IframeWrapper triplewrapper\";\n                break;\n            case 3: \n                classes=\"IframeWrapper fullwrapper\";\n                break;\n            default: \n                classes=\"IframeWrapper\";\n        }\n        if (this.iframeBlock) {\n            this.iframeBlock.className = classes; \n        }\n        this.setState((prevState: any) => ({\n            gridsize: prevState.gridsize + 1\n        }));\n\n    }\n    //3\n    decreaseFn() {\n        let classes = \"\";\n        switch (this.state.gridsize) {\n            case 2:\n                classes=\"IframeWrapper\";\n                break;\n            case 3: \n                classes=\"IframeWrapper doublewrapper\";\n                break;\n            case 4: \n                classes=\"IframeWrapper triplewrapper\";\n                break;\n            default: \n                classes=\"IframeWrapper\";\n        }\n        if (this.iframeBlock) {\n            this.iframeBlock.className = classes; \n        }\n        this.setState((prevState: any) => ({\n            gridsize: prevState.gridsize -1\n        }));\n    }\n\n    openModal() {\n        this.setState({modalIsOpen: true});\n    }\n     \n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        // this.subtitle.style.color = '#f00';\n        const modalzoom = (this.modalRef.current.offsetWidth) / this.state.Iwidth;\n        this.setState({\n          modalzoomlevel: modalzoom > 1 ? 1 : modalzoom\n        });\n    }\n     \n    closeModal() {\n        this.setState({modalIsOpen: false});\n    }\n    setzoom (size:any) {\n        const zoom = (size - 30) / this.state.Iwidth;\n        this.setState({\n          zoomlevel: zoom > 1 ? 1 : zoom\n        });\n    }\n    componentDidMount () {\n        const zoom = (this.iframeBlock.offsetWidth - 30) / this.state.Iwidth;\n        this.setState({\n          zoomlevel: zoom > 1 ? 1 : zoom\n        });\n    }\n\n    public render() {\n        let classes = \"\";\n        switch (this.state.gridsize) {\n            case 1:\n                classes=\"IframeWrapper\";\n                break;\n            case 2: \n                classes=\"IframeWrapper doublewrapper\";\n                break;\n            case 3: \n                classes=\"IframeWrapper triplewrapper\";\n                break;\n            case 4: \n                classes=\"IframeWrapper fullwrapper\";\n                break;\n            default: \n                classes=\"IframeWrapper\";\n        }\n        return (\n            <>\n                <div id={\"foo\"+this.state.id} className={classes} ref={this.setiframeBlockRef} >\n                    <div className=\"framedetails\">\n                        <h3>{this.props.name}<p><span>{this.props.Iwidth}</span> X <span>{this.props.Iheight}</span></p></h3>\n                        \n                        <button onClick={this.removeFn} className=\"closebutton\">+</button>\n                        <button onClick={this.openModal} className=\"expandbutton\"></button>\n                        <button onClick={this.increaseFn} className=\"zoombutton increasezoom\">+</button>\n                        <button onClick={this.decreaseFn} className=\"zoombutton decreasezoom\">-</button>\n                    </div>\n                    <style>{this.styles()}</style>\n                    <iframe className={\"iframe\" + this.props.id} title={\"iframe\" + this.props.id} src={this.props.link}></iframe>\n                </div>\n                <Modal\n                  isOpen={this.state.modalIsOpen}\n                  onAfterOpen={this.afterOpenModal}\n                  onRequestClose={this.closeModal}\n                  contentLabel=\"Example Modal\"\n                >\n                    <button onClick={this.closeModal} className=\"closebutton\">+</button>\n                    <div className=\"modalIframeContainer\"ref={this.modalRef}>\n                        <style>{this.modalStyles()}</style>\n                        <iframe className=\"modaliframe\" title={\"iframe\" + this.props.id} src={this.props.link}></iframe>\n                    </div>\n                </Modal>\n            </>\n        );\n    }\n}\n\n","import * as React from \"react\";\nimport Iframe from \"../../cells/Iframe/Iframe\";\n\n\nexport default class IframesContainer extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n        \tIframes : this.props.Iframes,\n            link : this.props.link,\n            removeBlock: this.props.removeBlock\n        };\n    }\n    public render() {\n        return (\n            <>\n                <div className=\"grid-4 iframecont\">\n                    {\n                        this.props.Iframes.map((item: any, i:any) => {\n                            return <Iframe removeBlock={this.state.removeBlock} key={i} id={i} link={this.props.link} Iwidth={parseInt(item.width)} name={item.name} Iheight={parseInt(item.height)} />\n                        })\n                    }\n                </div>\n            </>\n        );\n    }\n}","import * as React from \"react\";\n\n\nexport default class Task extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n            width : \"\",\n            height : \"\",\n            name : \"\",\n            addBlock : this.props.addBlock,\n            changeLink : this.props.changeLink,\n            link: \"https://\" \n        };\n        this.handleWidthChange = this.handleWidthChange.bind(this);\n        this.handleHeightChange = this.handleHeightChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleLinkChange = this.handleLinkChange.bind(this);\n        this.handleLinkInputChange = this.handleLinkInputChange.bind(this);\n    }\n    handleWidthChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            width: value\n        });\n    }\n    handleHeightChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            height: value\n        });\n    }\n    handleNameChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            name: value\n        });\n    }\n    handleAdd(event: any) {\n        this.state.addBlock(this.state.width,this.state.height,this.state.name)\n    }\n    handleLinkInputChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            link: value\n        });\n    }\n    handleLinkChange(event: any) {\n        this.state.changeLink(this.state.link)\n    }\n\n    public render() {\n        return (\n            <div className=\"controlBlock\">\n\n                <div className=\"AddInputs\">\n                        <label>Add View</label>\n                    <div className=\"inputBlock\">\n                        <input type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={this.handleNameChange}/>\n                    </div>\n                    <div className=\"inputBlock\">\n                        <input type=\"number\" placeholder=\"Width\" value={this.state.width} onChange={this.handleWidthChange}/>\n                    </div>\n                    <div className=\"inputBlock\">\n                        <input type=\"number\" placeholder=\"Height\" value={this.state.height} onChange={this.handleHeightChange}/>\n                    </div>\n                    <button onClick={this.handleAdd}>Add</button>\n                </div>\n                <div className=\"linkInputs\">\n                    <div className=\"inputBlock\">\n                        <label>Link</label>\n                        <input type=\"text\" value={this.state.link} onChange={this.handleLinkInputChange}/>\n                    </div>\n                    <button onClick={this.handleLinkChange}>Set</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n        ","import * as React from \"react\";\nimport IframesContainer from '../../layout/IframesContainer/IframesContainer';\nimport AddBlock from '../../molecules/AddBlock/AddBlock';\n\n\nexport default class ReactiveContainer extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n            link : \"\",\n        \tIframes : [\n                {\n                    \"name\" : \"Laptop\",\n                    \"width\" : \"1440\",\n                    \"height\" : \"900\"\n                },\n                {\n                    \"name\" : \"Tablet\",\n                    \"width\" : \"768\",\n                    \"height\" : \"1024\"\n                },\n                {\n                    \"name\" : \"Mobile\",\n                    \"width\" : \"375\",\n                    \"height\" : \"667\"\n                }\n            ]\n        };\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleLink = this.handleLink.bind(this);\n        this.removeBlock = this.removeBlock.bind(this);\n    }\n\n    handleAdd(w:any,h:any,n:any) {\n        const newBlock = {\n            \"name\": n,\n            \"width\": w,\n            \"height\": h\n        }\n        this.setState((prevState: any) => ({\n            Iframes: [...prevState.Iframes, newBlock]\n        }));\n    }\n    handleLink(link:any) {\n        this.setState({\n            link: link\n        });\n    }\n    removeBlock(blockNr: any) {\n        // this.setState({\n        //     Iframes: this.state.Iframes.filter((_: any, i: any) => i !== blockNr)\n        // });\n        this.setState((prevState: any) => ({\n          Iframes: [...prevState.Iframes.slice(0,blockNr), ...prevState.Iframes.slice(blockNr+1)]\n        }));\n    }\n    public render() {\n        return (\n            <div className=\"container\">\n                <AddBlock addBlock={this.handleAdd} changeLink={this.handleLink}/>\n                <IframesContainer removeBlock={this.removeBlock} link={this.state.link} Iframes={this.state.Iframes} />\n            </div>\n        );\n    }\n}","import * as React from 'react'; \nimport logo from './logo.svg';\nimport ReactiveContainer from './components/templates/ReactiveContainer/ReactiveContainer';\nimport './css/main.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ReactiveContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react'; \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}