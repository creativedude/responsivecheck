{"version":3,"sources":["components/cells/Iframe/Iframe.tsx","components/layout/IframesContainer/IframesContainer.tsx","components/molecules/AddBlock/AddBlock.tsx","components/templates/ReactiveContainer/ReactiveContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Modal","setAppElement","Iframe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","modalRef","iframeRef","state","link","Iwidth","Iheight","id","zoomlevel","name","gridsize","removeBlock","modalzoomlevel","React","styles","bind","assertThisInitialized","removeFn","openModal","afterOpenModal","closeModal","increaseFn","decreaseFn","setzoom","console","log","setState","prevState","modalIsOpen","modalzoom","current","offsetWidth","zoom","classes","react","className","ref","style","height","onClick","title","src","lib_default","a","isOpen","onAfterOpen","onRequestClose","contentLabel","modalStyles","IframesContainer","Iframes","_this2","map","item","i","Iframe_Iframe","key","parseInt","width","Task","addBlock","changeLink","handleWidthChange","handleHeightChange","handleNameChange","handleAdd","handleLinkChange","handleLinkInputChange","event","target","value","type","placeholder","onChange","ReactiveContainer","handleLink","w","h","n","newBlock","concat","toConsumableArray","blockNr","slice","AddBlock_Task","IframesContainer_IframesContainer","App","ReactiveContainer_ReactiveContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06014fb6.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Modal from 'react-modal';\nModal.setAppElement('#root')\n\nexport default class Iframe extends React.Component<any, any> {\n    private myRef: any;\n    private modalRef: any;\n    private iframeRef: any;\n    constructor(props : any) {\n        super(props);\n        this.state = {\n        \tlink: this.props.link,\n            Iwidth: this.props.Iwidth,\n            Iheight: this.props.Iheight,\n            id: this.props.id,\n            zoomlevel: 1,\n            name: this.props.name,\n            gridsize :  this.props.Iwidth <= this.props.Iheight ? 1 : 2,\n            removeBlock : this.props.removeBlock,\n            modalzoomlevel: 1,\n        };\n        this.myRef = React.createRef();\n        this.styles = this.styles.bind(this);\n        this.removeFn = this.removeFn.bind(this);\n\n        this.modalRef = React.createRef();\n        this.openModal = this.openModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.increaseFn = this.increaseFn.bind(this);\n        this.decreaseFn = this.decreaseFn.bind(this);\n        this.setzoom = this.setzoom.bind(this);\n    }\n    styles() {\n        console.log(\"running styles\");\n\n        const zoomlevel = this.state.zoomlevel;\n        const style =  \".iframe\" + this.props.id +\" {width: \" + this.props.Iwidth + \"px; height: \" + this.props.Iheight + \"px; border: 0; -ms-transform: scale(\"+zoomlevel+\"); -moz-transform: scale(\"+zoomlevel+\"); -o-transform: scale(\"+zoomlevel+\"); -webkit-transform: scale(\"+zoomlevel+\"); transform: scale(\"+zoomlevel+\"); -ms-transform-origin: 0 0; -moz-transform-origin: 0 0; -o-transform-origin: 0 0; -webkit-transform-origin: 0 0; transform-origin: 0 0;}\";\n        return style;\n    }\n    modalStyles() {\n        const modalzoomlevel = this.state.modalzoomlevel;\n        const style =  \".modaliframe {width: \" + this.props.Iwidth + \"px; height: \" + this.props.Iheight + \"px; border: 0; -ms-transform: scale(\"+modalzoomlevel+\"); -moz-transform: scale(\"+modalzoomlevel+\"); -o-transform: scale(\"+modalzoomlevel+\"); -webkit-transform: scale(\"+modalzoomlevel+\"); transform: scale(\"+modalzoomlevel+\"); -ms-transform-origin: 0 0; -moz-transform-origin: 0 0; -o-transform-origin: 0 0; -webkit-transform-origin: 0 0; transform-origin: 0 0;}\";\n        return style;\n    }\n    removeFn() {\n        this.state.removeBlock(this.state.id);\n    }\n    increaseFn() {\n        this.setState((prevState: any) => ({\n            gridsize: prevState.gridsize + 1\n        }));\n    }\n    decreaseFn() {\n        this.setState((prevState: any) => ({\n            gridsize: prevState.gridsize -1\n        }));\n    }\n\n    openModal() {\n        this.setState({modalIsOpen: true});\n    }\n     \n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        // this.subtitle.style.color = '#f00';\n        const modalzoom = (this.modalRef.current.offsetWidth) / this.state.Iwidth;\n        this.setState({\n          modalzoomlevel: modalzoom > 1 ? 1 : modalzoom\n        });\n    }\n     \n    closeModal() {\n        this.setState({modalIsOpen: false});\n    }\n    setzoom () {\n        console.log('component mounted')\n        const zoom = (this.myRef.current.offsetWidth - 30) / this.state.Iwidth;\n        this.setState({\n          zoomlevel: zoom > 1 ? 1 : zoom\n        });\n    }\n    componentDidMount () {\n        console.log('component mounted')\n        const zoom = (this.myRef.current.offsetWidth - 30) / this.state.Iwidth;\n        this.setState({\n          zoomlevel: zoom > 1 ? 1 : zoom\n        });\n    }\n    \n    public render() {\n\n        console.log('iframe state link',this.state.link);\n        console.log('iframe props link',this.props.link);\n        let classes = \"\";\n        switch (this.state.gridsize) {\n            case 1:\n                classes=\"IframeWrapper\";\n                break;\n            case 2: \n                classes=\"IframeWrapper doublewrapper\";\n                break;\n            case 3: \n                classes=\"IframeWrapper triplewrapper\";\n                break;\n            case 4: \n                classes=\"IframeWrapper fullwrapper\";\n                break;\n            default: \n                classes=\"IframeWrapper\";\n        }\n\n        return (\n            <>\n                <div id={this.props.id} className={classes} ref={this.myRef} style={{height : (this.props.Iheight * this.state.zoomlevel) + 60}}>\n                    {/*{this.setzoom()}*/}\n                    <div className=\"framedetails\">\n                        <h3>{this.props.name}<p><span>{this.props.Iwidth}</span> X <span>{this.props.Iheight}</span></p></h3>\n                        \n                        <button onClick={this.removeFn} className=\"closebutton\">+</button>\n                        <button onClick={this.openModal} className=\"expandbutton\"></button>\n                        <button onClick={this.increaseFn} className=\"zoombutton\">+</button>\n                        <button onClick={this.decreaseFn} className=\"zoombutton\">-</button>\n                    </div>\n                    <style>{this.styles()}</style>\n                    <iframe className={\"iframe\" + this.props.id} title={\"iframe\" + this.props.id} src={this.props.link}></iframe>\n                </div>\n                <Modal\n                  isOpen={this.state.modalIsOpen}\n                  onAfterOpen={this.afterOpenModal}\n                  onRequestClose={this.closeModal}\n                  contentLabel=\"Example Modal\"\n                >\n                    <button onClick={this.closeModal} className=\"closebutton\">+</button>\n                    <div className=\"modalIframeContainer\"ref={this.modalRef}>\n                        <style>{this.modalStyles()}</style>\n                        <iframe className=\"modaliframe\" title={\"iframe\" + this.props.id} src={this.props.link}></iframe>\n                    </div>\n                </Modal>\n            </>\n        );\n    }\n}\n\n","import * as React from \"react\";\nimport Iframe from \"../../cells/Iframe/Iframe\";\n\n\nexport default class IframesContainer extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n        \tIframes : this.props.Iframes,\n            link : this.props.link,\n            removeBlock: this.props.removeBlock\n        };\n    }\n    public render() {\n        console.log('inframesCont state link',this.state.link);\n        console.log('inframesCont props link',this.props.link);\n        return (\n            <>\n                <div className=\"grid-4 iframecont\">\n                    {\n                        this.props.Iframes.map((item: any, i:any) => {\n                            return <Iframe removeBlock={this.state.removeBlock} key={i} id={i} link={this.props.link} Iwidth={parseInt(item.width)} name={item.name} Iheight={parseInt(item.height)} />\n                        })\n                    }\n                </div>\n            </>\n        );\n    }\n}","import * as React from \"react\";\n\n\nexport default class Task extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n            width : \"\",\n            height : \"\",\n            name : \"\",\n            addBlock : this.props.addBlock,\n            changeLink : this.props.changeLink,\n            link: \"https://\" \n        };\n        this.handleWidthChange = this.handleWidthChange.bind(this);\n        this.handleHeightChange = this.handleHeightChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleLinkChange = this.handleLinkChange.bind(this);\n        this.handleLinkInputChange = this.handleLinkInputChange.bind(this);\n    }\n    handleWidthChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            width: value\n        });\n    }\n    handleHeightChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            height: value\n        });\n    }\n    handleNameChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            name: value\n        });\n    }\n    handleAdd(event: any) {\n        this.state.addBlock(this.state.width,this.state.height,this.state.name)\n    }\n    handleLinkInputChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            link: value\n        });\n    }\n    handleLinkChange(event: any) {\n        this.state.changeLink(this.state.link)\n    }\n\n    public render() {\n        return (\n            <div className=\"controlBlock\">\n\n                <div className=\"AddInputs\">\n                        <label>Add View</label>\n                    <div className=\"inputBlock\">\n                        <input type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={this.handleNameChange}/>\n                    </div>\n                    <div className=\"inputBlock\">\n                        <input type=\"number\" placeholder=\"Width\" value={this.state.width} onChange={this.handleWidthChange}/>\n                    </div>\n                    <div className=\"inputBlock\">\n                        <input type=\"number\" placeholder=\"Height\" value={this.state.height} onChange={this.handleHeightChange}/>\n                    </div>\n                    <button onClick={this.handleAdd}>Add</button>\n                </div>\n                <div className=\"linkInputs\">\n                    <div className=\"inputBlock\">\n                        <label>Link</label>\n                        <input type=\"text\" value={this.state.link} onChange={this.handleLinkInputChange}/>\n                    </div>\n                    <button onClick={this.handleLinkChange}>Set</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n        ","import * as React from \"react\";\nimport IframesContainer from '../../layout/IframesContainer/IframesContainer';\nimport AddBlock from '../../molecules/AddBlock/AddBlock';\n\n\nexport default class ReactiveContainer extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n            link : \"\",\n        \tIframes : [\n                {\n                    \"name\" : \"Laptop\",\n                    \"width\" : \"1440\",\n                    \"height\" : \"900\"\n                },\n                {\n                    \"name\" : \"Tablet\",\n                    \"width\" : \"768\",\n                    \"height\" : \"1024\"\n                },\n                {\n                    \"name\" : \"Mobile\",\n                    \"width\" : \"375\",\n                    \"height\" : \"667\"\n                }\n            ]\n        };\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleLink = this.handleLink.bind(this);\n        this.removeBlock = this.removeBlock.bind(this);\n    }\n\n    handleAdd(w:any,h:any,n:any) {\n        const newBlock = {\n            \"name\": n,\n            \"width\": w,\n            \"height\": h\n        }\n        this.setState((prevState: any) => ({\n            Iframes: [...prevState.Iframes, newBlock]\n        }));\n    }\n    handleLink(link:any) {\n        console.log(link);\n        this.setState({\n            link: link\n        });\n    }\n    removeBlock(blockNr: any) {\n        console.log(\"blockNr\",blockNr);\n        // this.setState({\n        //     Iframes: this.state.Iframes.filter((_: any, i: any) => i !== blockNr)\n        // });\n        this.setState((prevState: any) => ({\n          Iframes: [...prevState.Iframes.slice(0,blockNr), ...prevState.Iframes.slice(blockNr+1)]\n        }));\n        console.log(this.state);\n    }\n    public render() {\n        console.log('rendering', this.state.Iframes);\n        return (\n            <div className=\"container\">\n                <AddBlock addBlock={this.handleAdd} changeLink={this.handleLink}/>\n                <IframesContainer removeBlock={this.removeBlock} link={this.state.link} Iframes={this.state.Iframes} />\n            </div>\n        );\n    }\n}","import * as React from 'react'; \nimport logo from './logo.svg';\nimport ReactiveContainer from './components/templates/ReactiveContainer/ReactiveContainer';\nimport './css/main.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ReactiveContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react'; \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}