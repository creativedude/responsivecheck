{"version":3,"sources":["components/cells/Iframe/Iframe.tsx","components/layout/IframesContainer/IframesContainer.tsx","components/molecules/AddBlock/AddBlock.tsx","components/templates/ReactiveContainer/ReactiveContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Iframe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myRef","iframeRef","state","link","Iwidth","Iheight","id","zoomlevel","name","classes","removeBlock","React","styles","bind","assertThisInitialized","removeFn","zoom","current","offsetWidth","setState","console","log","react","className","ref","style","height","onClick","title","src","IframesContainer","Iframes","_this2","map","item","i","Iframe_Iframe","key","parseInt","width","Task","addBlock","changeLink","handleWidthChange","handleHeightChange","handleNameChange","handleAdd","handleLinkChange","handleLinkInputChange","event","target","value","type","placeholder","onChange","ReactiveContainer","handleLink","w","h","n","newBlock","prevState","concat","toConsumableArray","blockNr","slice","AddBlock_Task","IframesContainer_IframesContainer","App","ReactiveContainer_ReactiveContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b70d7347.chunk.js","sourcesContent":["import * as React from \"react\";\n\n\nexport default class Iframe extends React.Component<any, any> {\n    private myRef: any;\n    private iframeRef: any;\n    constructor(props : any) {\n        super(props);\n        this.state = {\n        \tlink: this.props.link,\n            Iwidth: this.props.Iwidth,\n            Iheight: this.props.Iheight,\n            id: this.props.id,\n            zoomlevel: 1,\n            name: this.props.name,\n            classes : this.props.Iwidth <= this.props.Iheight ? \"IframeWrapper\" : \"IframeWrapper widewrapper\",\n            removeBlock : this.props.removeBlock\n        };\n        this.myRef = React.createRef();\n        this.styles = this.styles.bind(this);\n        this.removeFn = this.removeFn.bind(this);\n    }\n    styles() {\n        const zoomlevel = this.state.zoomlevel;\n        const style =  \".iframe\" + this.props.id +\" {width: \" + this.props.Iwidth + \"px; height: \" + this.props.Iheight + \"px; border: 0; -ms-transform: scale(\"+zoomlevel+\"); -moz-transform: scale(\"+zoomlevel+\"); -o-transform: scale(\"+zoomlevel+\"); -webkit-transform: scale(\"+zoomlevel+\"); transform: scale(\"+zoomlevel+\"); -ms-transform-origin: 0 0; -moz-transform-origin: 0 0; -o-transform-origin: 0 0; -webkit-transform-origin: 0 0; transform-origin: 0 0;}\";\n        return style;\n    }\n    removeFn() {\n        this.state.removeBlock(this.state.id);\n    }\n    componentDidMount () {\n        const zoom = (this.myRef.current.offsetWidth - 30) / this.state.Iwidth;\n        this.setState({\n          zoomlevel: zoom > 1 ? 1 : zoom\n        });\n    }\n    public render() {\n\n        console.log('iframe state link',this.state.link);\n        console.log('iframe props link',this.props.link);\n        return (\n            <div id={this.props.id} className={this.state.classes} ref={this.myRef} style={{height : (this.props.Iheight * this.state.zoomlevel) + 60}}>\n                <div className=\"framedetails\">\n                    <h3>{this.props.name}</h3>\n                    <p><span>{this.props.Iwidth}</span> X <span>{this.props.Iheight}</span></p>\n                    <button onClick={this.removeFn} className=\"closebutton\">+</button>\n                </div>\n                <style>{this.styles()}</style>\n                <iframe className={\"iframe\" + this.props.id} title={\"iframe\" + this.props.id} src={this.props.link}></iframe>\n            </div>\n        );\n    }\n}\n\n","import * as React from \"react\";\nimport Iframe from \"../../cells/Iframe/Iframe\";\n\n\nexport default class IframesContainer extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n        \tIframes : this.props.Iframes,\n            link : this.props.link,\n            removeBlock: this.props.removeBlock\n        };\n    }\n    public render() {\n        console.log('inframesCont state link',this.state.link);\n        console.log('inframesCont props link',this.props.link);\n        return (\n            <>\n                <div className=\"grid-4 iframecont\">\n                    {\n                        this.props.Iframes.map((item: any, i:any) => {\n                            return <Iframe removeBlock={this.state.removeBlock} key={i} id={i} link={this.props.link} Iwidth={parseInt(item.width)} name={item.name} Iheight={parseInt(item.height)} />\n                        })\n                    }\n                </div>\n            </>\n        );\n    }\n}","import * as React from \"react\";\n\n\nexport default class Task extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n            width : \"\",\n            height : \"\",\n            name : \"\",\n            addBlock : this.props.addBlock,\n            changeLink : this.props.changeLink,\n            link: \"https://\" \n        };\n        this.handleWidthChange = this.handleWidthChange.bind(this);\n        this.handleHeightChange = this.handleHeightChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleLinkChange = this.handleLinkChange.bind(this);\n        this.handleLinkInputChange = this.handleLinkInputChange.bind(this);\n    }\n    handleWidthChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            width: value\n        });\n    }\n    handleHeightChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            height: value\n        });\n    }\n    handleNameChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            name: value\n        });\n    }\n    handleAdd(event: any) {\n        this.state.addBlock(this.state.width,this.state.height,this.state.name)\n    }\n    handleLinkInputChange(event: any) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            link: value\n        });\n    }\n    handleLinkChange(event: any) {\n        this.state.changeLink(this.state.link)\n    }\n\n    public render() {\n        return (\n            <div className=\"controlBlock\">\n\n                <div className=\"AddInputs\">\n                        <label>Add View</label>\n                    <div className=\"inputBlock\">\n                        <input type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={this.handleNameChange}/>\n                    </div>\n                    <div className=\"inputBlock\">\n                        <input type=\"number\" placeholder=\"Width\" value={this.state.width} onChange={this.handleWidthChange}/>\n                    </div>\n                    <div className=\"inputBlock\">\n                        <input type=\"number\" placeholder=\"Height\" value={this.state.height} onChange={this.handleHeightChange}/>\n                    </div>\n                    <button onClick={this.handleAdd}>Add</button>\n                </div>\n                <div className=\"linkInputs\">\n                    <div className=\"inputBlock\">\n                        <label>Link</label>\n                        <input type=\"text\" value={this.state.link} onChange={this.handleLinkInputChange}/>\n                    </div>\n                    <button onClick={this.handleLinkChange}>Set</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n        ","import * as React from \"react\";\nimport IframesContainer from '../../layout/IframesContainer/IframesContainer';\nimport AddBlock from '../../molecules/AddBlock/AddBlock';\n\n\nexport default class ReactiveContainer extends React.Component<any, any> {\n    constructor(props : any) {\n        super(props);\n        this.state = {\n            link : \"\",\n        \tIframes : [\n                {\n                    \"name\" : \"Laptop\",\n                    \"width\" : \"1440\",\n                    \"height\" : \"900\"\n                },\n                {\n                    \"name\" : \"Tablet\",\n                    \"width\" : \"768\",\n                    \"height\" : \"1024\"\n                },\n                {\n                    \"name\" : \"Mobile\",\n                    \"width\" : \"375\",\n                    \"height\" : \"667\"\n                }\n            ]\n        };\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleLink = this.handleLink.bind(this);\n        this.removeBlock = this.removeBlock.bind(this);\n    }\n\n    handleAdd(w:any,h:any,n:any) {\n        const newBlock = {\n            \"name\": n,\n            \"width\": w,\n            \"height\": h\n        }\n        this.setState((prevState: any) => ({\n            Iframes: [...prevState.Iframes, newBlock]\n        }));\n    }\n    handleLink(link:any) {\n        console.log(link);\n        this.setState({\n            link: link\n        });\n    }\n    removeBlock(blockNr: any) {\n        console.log(\"blockNr\",blockNr);\n        // this.setState({\n        //     Iframes: this.state.Iframes.filter((_: any, i: any) => i !== blockNr)\n        // });\n        this.setState((prevState: any) => ({\n          Iframes: [...prevState.Iframes.slice(0,blockNr), ...prevState.Iframes.slice(blockNr+1)]\n        }));\n        console.log(this.state);\n    }\n    public render() {\n        console.log('rendering', this.state.Iframes);\n        return (\n            <div className=\"container\">\n                <AddBlock addBlock={this.handleAdd} changeLink={this.handleLink}/>\n                <IframesContainer removeBlock={this.removeBlock} link={this.state.link} Iframes={this.state.Iframes} />\n            </div>\n        );\n    }\n}","import * as React from 'react'; \nimport logo from './logo.svg';\nimport ReactiveContainer from './components/templates/ReactiveContainer/ReactiveContainer';\nimport './css/main.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ReactiveContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react'; \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}